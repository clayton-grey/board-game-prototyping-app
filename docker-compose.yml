version: "3.8"

services:
  app:
    build: .
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: npm run dev

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: board_game_prototyping
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

  db-init:
    image: postgres:latest
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./db-init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: board_game_prototyping
    entrypoint: >
      sh -c "PGPASSWORD=postgrespassword psql -h db -U postgres -d board_game_prototyping -f /docker-entrypoint-initdb.d/init.sql"

volumes:
  pg_data: {}
